// //CSS Reset
* {
    box-sizing: border-box;
  }
  
  html,
  body {
    margin: 0;
    padding: 0;
  }


  
//   //CSS Variable
  $gutter-width: 40px;
  $grid-num: 12;

  $break-point: (
    "-lg": 992px,
    "-md": 768px,
    "-sm": 576px
  );

  @mixin RWD($width) {
    @media (max-width: $width) {
      @content
    }
  };

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 ($gutter-width / 2);

    @include RWD(992px) {
        width: 100%;
        padding: 0 20px;
      }
    @include RWD(768px) {
        padding: 0 20px;
      }
      @include RWD(576px) {
        padding: 0 16px;
      }
  }


  .row {
    display: flex;
    margin-left: -$gutter-width / 2;
    margin-right: -$gutter-width / 2;
    flex-wrap: wrap;
  }

  
  %no-gutter {
    margin: 0;
    padding: 0;
  }
  
  .no-gutter {
    margin: 0;
    padding: 0;
  
    @for $i from 1 to $grid-num + 1 {
      .col-#{$i} {
        @extend %no-gutter;
      }
    }
  
    @each $key, $value in $break-point {
      @for $i from 1 to $grid-num + 1 {
        .col#{$key}-#{$i} {
          @extend %no-gutter;
        }
      }
    }
  }
  
  %col {
    padding-left: $gutter-width / 2;
    padding-right: $gutter-width / 2;
    position: relative;
  }
  
  @for $i from 1 to $grid-num + 1 {
    .col-#{$i} {
      @extend %col;
      max-width: 100% * ($i / $grid-num);
      flex: 0 0 (100% * ($i / $grid-num));
    }
  }
  
  @each $key, $value in $break-point {
    @for $i from 1 to $grid-num + 1 {
      .col#{$key}-#{$i} {
        @extend %col;
        max-width: 100%;
        flex: 0 0 100%;
      }
    }
  
    @media (min-width: $value) {
      @for $i from 1 to $grid-num + 1 {
        .col#{$key}-#{$i} {
          max-width: 100% * ($i / $grid-num);
          flex: 0 0 (100% * ($i / $grid-num));
        }
      }
    }
  }