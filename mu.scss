$gutter: 40px !default;
$grid-count : 12 !default;


$break-point: (
  "lg": 992px,
  "-md": 768px,
  "-sm": 576px
);


%no-gutter {
  margin: 0;
  padding: 0;
}


.no-gutter {
  margin: 0;
  padding: 0;

  @for $i from 1 to $grid-count + 1 {
    .col-#{$i} {
      @extend %no-gutter;
    }
  }

  @each $key, $value in $break-point {
    @for $i from 1 to $grid-count + 1 {
      .col#{$key}-#{$i} {
        @extend %no-gutter;
      }
    }
  }
}


@mixin colCalc($breakpoint: null) {
    @for $i from 0 through $grid-count {
      @if ($i == 0) {
        .col {
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
          position: relative;
        }
      }  @else {
          .col-#{$breakpoint}#{$i} {
          position: relative;
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
          flex: 0 0 ($i / $grid-count) * 100%;
          max-width: ($i / $grid-count) * 100%;
        }
      }
    }
  }

@include colCalc();

@mixin RWD($width) {
    @media (max-width: $width) {
      @content
    }
  };

  
@include RWD(768px) {
    @include colCalc(md-);
  };



  
  .container {
    max-width: 1400px;
    margin: 0 auto;
    @include RWD(768px) {
      padding: 0 39px;
    }
    // phone
    @include RWD(375px) {
      padding: 0 15px;
    }
  }

  .row {
    margin-left: -$gutter / 2;
    margin-right: -$gutter / 2;
    display: flex;
    flex-flow: row nowrap;
  }
  
  .row-reverse {
    margin-left: -$gutter / 2;
    margin-right: -$gutter / 2;
    display: flex;
    flex-flow: row-reverse nowrap;
  }